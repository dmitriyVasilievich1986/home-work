# region Текст задания

"""
Задание 5*.Усовершенствовать программу «Банковский депозит».
Третьим аргументом в функцию должна передаваться фиксированная
ежемесячная сумма пополнения вклада. Необходимо в главной функции
реализовать вложенную функцию подсчета процентов для пополняемой суммы.
Примем, что клиент вносит средства в последний день каждого месяца,
кроме первого и последнего. Например, при сроке вклада в 6 месяцев
пополнение происходит в течение 4 месяцев. Вложенная функция возвращает
сумму дополнительно внесенных средств (с процентами),
а главная функция — общую сумму по вкладу на конец периода.

Примечание: используем функциональный подход (не ООП)
Пример: 10 тыс на 24 мес, пополнение - по 100
chargable_deposit(10000, 24, 100)
к концу срока: 13739.36
"""

# endregion

# region init dictionary

# инициализация списка словарей, банковских продуктов
deposit_sum = []
deposit_sum.append({
    'begin_sum': 1000,
    'end_sum': 10000,
    6: 5,
    12: 6,
    24: 5,
})
deposit_sum.append({
    'begin_sum': 10000,
    'end_sum': 100000,
    6: 6,
    12: 7,
    24: 6.5,
})
deposit_sum.append({
    'begin_sum': 100000,
    'end_sum': 1000000,
    6: 7,
    12: 8,
    24: 7.5,
})


# endregion

# инициализация функции расчета суммы по вкладу
def deposit(start_sum=10000, term=24, monthly_incom=0,  capitalization=False):
    """
    Функция для расчета накоплений. Принимает начальную сумму - start_sum,
        длительность вклада - term, и дополнительный параметр
        возможность капитализации вклада - capitalization.
        Функция выбирает из представлееных наборов подходящий по входящим параметрам
        и возвращает конечную сумму. Также принимает фиксированный ежемесячный
        вклад, кроме первого и последнего месяца.
    Принимает: Целочисленное беззнаковое start_sum,
                целочисленное беззнаковое term,
                целочисленное беззнаковое monthly_incom,
                булевое значение capitalization.
    Возвращает: Целочисленное беззнаковое output.
    """
    # проверка на входимость в словари входящих параметров
    if not term in deposit_sum[0] or not (
            deposit_sum[0]['begin_sum'] < start_sum < deposit_sum[len(deposit_sum) - 1]['end_sum']):
        print('неверное значение')
        return None
    # фиксаия начальной суммы
    output = start_sum
    # нахождение из списка подходящих по параметрам словарей
    item = list(filter(lambda x: x['begin_sum'] <= start_sum <= x['end_sum'], deposit_sum))
    # вычисляем процент в месяц
    interest = item[len(item) - 1][term] / 12
    # цикл приращивания к начальной сумме процентов
    for a in range(term):
        output += start_sum * (interest / 100)
        if capitalization:      # если включена капитализация
            start_sum = output
        if 0 < a < term - 1:
            output += monthly_incom
            start_sum += monthly_incom
    return round(output, 2)     # округляем результат


# вызов функции
print(deposit(start_sum=10000, term=24, monthly_incom=100, capitalization=True))
